{"version":3,"sources":["firebase.js","StateProvider.js","Chat.js","Sidebarchat.js","Slidbar.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","send","setsend","input","setInput","roomId","useParams","roomname","setroomname","messages","setmessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","console","log","className","Avatar","src","Date","length","timestamp","toDate","toUTCString","IconButton","SearchOutlined","AttachFile","message","displayName","InsertEmoticon","onChange","e","target","type","placeholder","onClick","preventDefault","add","FieldValue","serverTimestamp","Mic","Sidebarchat","app","id","setMessages","roomName","prompt","to","Slidbar","rooms","setrooms","room","actionTypes","state","action","Login","dispatch","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2af2c33a.chunk.js","sourcesContent":["//For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase';\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDMl54JGgu0EU411JtysNDjJphCqqyf-FA\",\r\n  authDomain: \"whatts-app-clone-1aef2.firebaseapp.com\",\r\n  projectId: \"whatts-app-clone-1aef2\",\r\n  storageBucket: \"whatts-app-clone-1aef2.appspot.com\",\r\n  messagingSenderId: \"991791830791\",\r\n  appId: \"1:991791830791:web:fb777054634be525b817a2\",\r\n  measurementId: \"G-2W6SZSQSYQ\"\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore(); \r\nconst auth = firebaseApp.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth,provider};\r\nexport default db;\r\n\r\n\r\n","import React, {createContext,useContext,useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","\r\nimport React,{useEffect,useState} from 'react'\r\n\r\nimport \"./Chat.css\";\r\nimport { Avatar, Button, IconButton, Input } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport {AttachFile, InsertEmoticon, Mic, SearchOutlined} from \"@material-ui/icons\";\r\nimport {useParams} from 'react-router-dom'\r\nimport db from './firebase'\r\n// import userEvent from '@testing-library/user-event';\r\nimport firebase from \"firebase\";\r\n// import {user} from \r\nimport {useStateValue} from \"./StateProvider\";\r\nfunction Chat() {\r\n    const [send,setsend]=useState(\"\");\r\n    const [input,setInput]=useState(\"\");\r\n    const {roomId}=useParams();\r\n    const [roomname,setroomname]=useState(\"\");\r\n    const [messages,setmessages]=useState([]);\r\n    const [{user},dispatch]=useStateValue();\r\n    useEffect(()=>{\r\nif(roomId){\r\n    db.collection('rooms').doc(roomId).onSnapshot(snapshot=>(\r\n        setroomname(snapshot.data().name)\r\n    ))\r\n    db.collection('rooms'). doc(roomId).collection(\"Messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot=>{\r\n        setmessages(snapshot.docs.map(doc=>doc.data()))\r\n    })\r\n\r\n}\r\n    },[roomId])\r\n    useEffect(()=>{\r\n        setsend(Math.floor(Math.random()*5000));\r\n        console.log(send);\r\n    },[]);\r\n    const sendMessage=(e)=>{\r\n        e.preventDefault();\r\n        console.log(\"You typeds\",input);\r\n        db.collection('rooms').doc(roomId).collection('Messages').add(\r\n            {\r\n                message:input,\r\n                name:user.displayName,\r\n                timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n            }\r\n        )\r\n        setInput(\"\");\r\n    }\r\n    return (\r\n        <div className=\"chat\">\r\n          <div className=\"chat_header\">\r\n          <Avatar src={`https://avatars.dicebear.com/api/human/${send}.svg`}/>\r\n            <div className=\"chat_headerinfo\">\r\n                <h3>{roomname}</h3>\r\n                {/* <p>{new Date(messages[messages.length-1]?.timestamp?.toDate().toUTCString())}</p> */}\r\n                    <p className='chat-room-last-seen'>\r\n                        Last seen {\" \"}\r\n                        {new Date(\r\n                            messages[messages.length - 1]?.\r\n                            timestamp?.toDate()\r\n                        ).toUTCString()}\r\n                    </p>\r\n           \r\n            </div>\r\n              <div className=\"chat_heaserright\">\r\n              <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n              </div>\r\n            </div>  \r\n          <div className=\"chat_body\">\r\n              {messages.map((message)=>(\r\n                  <p className={`chat_message ${message.name==user.displayName && 'chat_receiver'}`}>\r\n                  <span className=\"chat_peoplename\">{message.name}</span>\r\n                    {message.message}\r\n                  <span className=\"chat_bodytimestamp\">\r\n                        {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                  </span>\r\n              </p>\r\n              ))}\r\n              \r\n            </div>  \r\n          <div className=\"chat_search\">\r\n              <InsertEmoticon/>\r\n              <form className=\"footer_form\">\r\n                  <input value={input} onChange={e=>{setInput(e.target.value)}} type=\"text\" placeholder=\"Type here.....\"/>\r\n                  <button onClick={sendMessage} type=\"submit\">search</button>\r\n              </form>\r\n              <Mic/>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n\r\n\r\n","import React,{useEffect,useState} from 'react'\r\nimport './Siderbarchat.css';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport db from './firebase'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction Sidebarchat({app,id,name}) {\r\n    const [send,setsend]=useState(\"\");\r\n     const [messages, setMessages] = useState(\"\");\r\n    useEffect(() => {\r\n            if(id){\r\n                db.collection('rooms').doc(id).collection('Messages').orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n                    setMessages(snapshot.docs.map((doc) => doc.data()))\r\n                })\r\n            }\r\n        }, [id]);\r\n\r\n    useEffect(()=>{\r\n        setsend(Math.floor(Math.random()*5000));\r\n        console.log(send);\r\n    },[]);\r\n    const creatchat=()=>{\r\n        const roomName=prompt(\"Please enter your name \");\r\n        if(roomName){\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    return ! app?(\r\n        <Link to={`/room/${id}`}>\r\n        \r\n        <div className=\"sidebarChat\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${send}.svg`}/>\r\n            <div className=\"sidebarchat_info\">\r\n                <h2>{name}</h2>\r\n                 <p>{messages[0]?.message}</p>\r\n\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        </Link>\r\n    ):(\r\n        <div onClick={creatchat} className=\"sidebarChat\" id=\"text\">\r\n        <h2>Add New group</h2>\r\n\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Sidebarchat\r\n","import React,{useEffect,useState} from 'react';\r\nimport './Slidbar.css';\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {SearchOutlined} from \"@material-ui/icons\";\r\nimport Sidebarchat from './Sidebarchat';\r\nimport db from './firebase';\r\n\r\nfunction Slidbar() {\r\n    const [rooms,setrooms]=useState([]);\r\n    useEffect(()=>{\r\n        db.collection('rooms').onSnapshot(snapshot=>(\r\n            setrooms(snapshot.docs.map(doc=>\r\n            ({\r\n                id:doc.id,\r\n                data:doc.data()\r\n            })\r\n            ))\r\n        ))\r\n    },[])\r\n    return (\r\n        <div className=\"sidbar\">\r\n            <div className=\"sidbar_header\">\r\n                <Avatar />\r\n                <div className=\"sidebar_headerright\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"sidbar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                <IconButton>\r\n                <SearchOutlined/>\r\n                </IconButton>\r\n                <input placeholder=\"search here\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidbar_chats\">\r\n                <Sidebarchat app/>\r\n               {rooms.map(room=>(\r\n                   <Sidebarchat key={room.id} id={room.id} name={room.data.name} />\r\n    ))}\r\n                \r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slidbar;\r\n","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react'\r\nimport { Button } from \"@material-ui/core\";\r\nimport './login.css'\r\nimport {auth,provider} from './firebase';\r\nimport {actionTypes} from \"./reducer\";\r\nimport {useStateValue} from \"./StateProvider\";\r\nfunction Login() {\r\n    const [{},dispatch]=useStateValue();\r\n    const signIn=()=>{\r\n            auth.signInWithPopup(provider)\r\n            .then((result)=> {\r\n                dispatch(\r\n                    {\r\n                        type: actionTypes.SET_USER,\r\n                        user:result.user,\r\n                    }\r\n                )\r\n            })\r\n           .catch((error)=>alert(error.message));\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_div\">\r\n                <img src=\"./Img/—Pngtree—whatsapp icon design vector_4949781.png\"/>\r\n                <h1>Login Page</h1>\r\n                <div className=\"login_text\">\r\n                </div>\r\n                <div className=\"btn\"> \r\n                    <Button onClick={signIn}>\r\n                    sign in with google\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React,{useState} from \"react\"\nimport './App.css';\nimport Chat from \"./Chat\";\nimport Slidbar from './Slidbar';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport Login from './Login'\nimport {useStateValue} from './StateProvider';\nfunction App(){\n  // const [user,setuser]=useState(null);\n  const [{user},dispatch]=useStateValue();\n\n  return(\n    <div className=\"app\">\n    {!user ? (\n      <Login/>\n    ):(\n       <div className=\"app_body\"> \n      <Router>\n          <Slidbar/>\n         <Switch>\n       \n            <Route path=\"/room/:roomId\">   <Chat/>  </Route>\n            <Route path=\"/\">   <Chat/> </Route>\n        \n        \n        </Switch>\n      </Router>\n      </div>\n    )}\n    </div>\n     \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './StateProvider';\nReactDOM.render(\n  <React.StrictMode>\n  <StateProvider initialState ={initialState}\n  reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}